Submitted By: Ankush Khera (2010991826)

Que 1: Grading System

#include<iostream>
using namespace std;

int main(){
    int marks;
    cin>>marks;
    if(marks>90 && marks<=100)
        cout<<"A+"<<endl;
    else if(marks>80 && marks<=90)
        cout<<"A"<<endl;
    else if(marks>70 && marks<=80)
        cout<<"B+"<<endl;
    else if(marks>60 && marks<=70)
        cout<<"B"<<endl;
    else
        cout<<"Low Grade"<<endl;

    return 0;
}

----------------------------------------------------
Que 2: Multiplication Table:

#include<iostream>
using namespace std;

int main(){

    int n;
    cin>>n;

    for(int i=1; i<=10; i++){
        cout<<n<<" * "<<i<<" = "<<n*i<<endl;
    }

    return 0;
}

--------------------------------------------------
Que 3: Pattern 1:

#include<iostream>
using namespace std;
                                                             // 1
int main(){                                                     12
                                                                123
    int n;                                                      1234
    cin>>n;

    for(int i=1; i<=n; i++){
        for(int j=1; j<=i; j++){
            cout<<j<<" ";
        }
        cout<<endl;
    }

    return 0;
}

--------------------------------------------------
Que 4: Pattern 2:

#include<iostream>
using namespace std;                                         // *
                                                                21
int main(){                                                     ***
                                                                4321
    int n;                                                      *****
    cin>>n;

    for(int i=1; i<=n; i++){
        int p = i;
        for(int j=1; j<=i; j++){
            if(i%2!=0) cout<<"*"<<" ";
            else cout<<p<<" ";
            p--;
        }
        cout<<endl;
    }

    return 0;
}

--------------------------------------------------
Que 5: Check if the no is even/odd:

#include<iostream>
using namespace std;

int main(){

    int n;
    cin>>n;

    if(n%2==0) cout<<"Even no"<<endl;
    else cout<<"Odd No"<<endl;

    return 0;
}

--------------------------------------------------
Que 6: Count the no of even and odd digits in a multi-digit no:

#include<iostream>
using namespace std;

int main(){

    int n;
    cin>>n;

    int rem = 0;
    int even_dig = 0;
    int odd_dig = 0;
    while(n!=0){
        rem = n%10;
        if(rem%2==0) even_dig++;
        else odd_dig++;
        n=n/10;
    }
    cout<<"No. of even digits: "<<even_dig<<endl;
    cout<<"No. of odd digits: "<<odd_dig<<endl;

    return 0;
}

--------------------------------------------
Que 7: Print Fibonacci Series:

#include<iostream>
using namespace std;

int main(){

    int a = 0;
    int b = 1;
    int c;
    for(int i=0; i<10; i++){
        cout<<a<<" ";
        c=a+b;
        a=b;
        b=c;
    }

    return 0;
}

--------------------------------------------
Que 8: Cumulative Sum:

#include<iostream>
using namespace std;

int main(){

    int n;
    cin>>n;
    int sum = n;

    while(n!=0){
        cout<<sum<<" ";
        cin>>n;
        sum+=n;
    }

    return 0;
}

--------------------------------------------
Que 9: Cumulative Product:

#include<iostream>
using namespace std;

int main(){

    int n;
    cin>>n;
    int prod = n;

    while(n!=0){
        cout<<prod<<" ";
        cin>>n;
        prod*=n;
    }

    return 0;
}

-----------------------------------------
Que 10: Check if the elements of an array are consecutive or not (in Arithmetic Progression)

#include<iostream>
using namespace std;

int main(){

    int n;
    cin>>n;
    int* arr = new int[n];

    for(int i=0; i<n; i++){
        cin>>arr[i];
    }

    bool flag = true;
    int d = arr[1]-arr[0];
    for(int i=2; i<n; i++){
        if(arr[i]-arr[i-1]!=d) flag = false;
    }
    if(flag==true) cout<<"Yes, they are in AP."<<endl;
    else cout<<"No, they aren't in AP."<<endl;

    return 0;
}

------------------------------------------------
Que 11: Print sum of 1-n digits:

#include<iostream>
using namespace std;

int main(){

    int n;
    cin>>n;
    int sum = 0;
    for(int i=1;i<=n;i++){
        sum+=i;
    }
    cout<<"Sum of 1-n digits: "<<sum;

    return 0;
}

-----------------------------------------
Que 12: Factorial of a no:

#include<iostream>
using namespace std;

int main(){

    int n;
    cin>>n;
    int fact = 1;
    if(n==0 || n==1) cout<<fact<<endl;
    else{
        for(int i=1; i<=n; i++){
            fact = fact*i;
        }
        cout<<fact<<endl;
    }

    return 0;
}

---------------------------------------------
Que 13: Median of an array:

#include<iostream>
#include <bits/stdc++.h>
using namespace std;

int main(){

    int n;
    cin>>n;
    int* arr = new int[n];

    for(int i=0; i<n; i++){
        cin>>arr[i];
    }

    sort(arr, arr+n);

    int midterm;
    if(n%2==0){
        midterm = ((n/2)+((n/2)+1))/2;
    }else{
        midterm = (n+1)/2;
    }
    cout<<"Median: "<<arr[midterm-1];

    return 0;
}

----------------------------------------------
Que 14: Mode:

#include<iostream>
#include <vector>
using namespace std;

int main(){

    int n;
    cin>>n;
    int* arr = new int[n];

    for(int i=0; i<n; i++){
        cin>>arr[i];
    }
    
    int prevcount = 1;
    vector<int> vec;
    for(int i=0; i<n-1; i++){
        int count = 1;
        if(arr[i]!=-1){
            for(int j=i+1; j<n; j++){
                if(arr[j]==arr[i]){
                    count++;
                    arr[j]=-1;
                }
            }
            if(count>=prevcount){
                vec.push_back(arr[i]);
                prevcount = count;
            }
        }
    }
    for(int i=0; i<vec.size();i++){
        cout<<vec[i]<<" ";
    }

    return 0;
}
----------------------------------------------
Que 15: Save odd and even elements of an array in 2 separate arrays:

#include<iostream>
#include <vector>
using namespace std;

int main(){

    int n;
    cin>>n;
    int* arr = new int[n];
    int odd = 0, even = 0;
    for(int i=0; i<n; i++){
        cin>>arr[i];
        if(arr[i]%2==0) even++;
        else odd++;
    }
    
    int* oddarr = new int[odd];
    int* evenarr = new int[even];
    int k = 0, p = 0;
    for(int i=0; i<n; i++){
        if(arr[i]%2==0){
            evenarr[k++] = arr[i];
        }else{
            oddarr[p++] = arr[i];
        }
    }
    
    cout<<"Even Arr: ";
    for(int i=0; i<even; i++){
        cout<<evenarr[i]<<" ";
    }
    cout<<endl;
    cout<<"Odd Arr: ";
    for(int i=0; i<odd; i++){
        cout<<oddarr[i]<<" ";
    }

    return 0;
}

---------------------------------------------
Que 16: Std. Deviation of an array:

#include<iostream>
#include <cmath>
using namespace std;

int main(){

    int n;
    cin>>n;
    int* arr = new int[n];
    for(int i=0; i<n; i++){
        cin>>arr[i];
    }

    int sum = 0;
    for(int i=0; i<n; i++){
        sum+=arr[i];
    }
    float mean = float(sum/n);
    float dev = 0.0;
    for(int i=0; i<n; i++){
        dev+=pow((arr[i]-mean),2);
    }
    
    double ans = sqrt(double(dev/n-1));
    cout<<"Std. Dev: "<<ans<<endl;

    return 0;
}

------------------------------------------------
Que 17: Matrix Multiplication:

#include<iostream>
#include <cmath>
using namespace std;

int main(){

    // Taking 1st matrix as input
    int m, n;
    cout<<"Enter no. of rows & cols for matrix 1: "<<endl;
    cin>>m>>n;
    int arr1[m][n];
    cout<<"Enter elements of matrix 1: "<<endl;
    for(int i=0; i<m; i++){
        for(int j=0; j<n; j++){
            cin>>arr1[i][j];
        }
    }
    // Printing first matrix
    cout<<"Your 1st Matrix: "<<endl;
    for(int i=0; i<m; i++){
        for(int j=0; j<n; j++){
            cout<<arr1[i][j]<<" ";
        }
        cout<<endl;
    }

    // Taking 2nd matrix as input
    int p, q;
    cout<<"Enter no. of rows & cols for matrix 2: "<<endl;
    cin>>p>>q;
    int arr2[p][q];
    cout<<"Enter elements of matrix 2: "<<endl;
    for(int i=0; i<p; i++){
        for(int j=0; j<q; j++){
            cin>>arr2[i][j];
        }
    }
    // Printing 2nd matrix
    cout<<"Your 2nd Matrix: "<<endl;
    for(int i=0; i<p; i++){
        for(int j=0; j<q; j++){
            cout<<arr2[i][j]<<" ";
        }
        cout<<endl;
    }

    int ans[m][q];

    if(n==p){
        for(int i=0; i<m; i++){
            for(int j=0; j<q; j++){
                int sum = 0;
                for(int k=0; k<n; k++){
                    sum+=(arr1[i][k]*arr2[k][j]);
                }
                ans[i][j] = sum;
            }
        }
        // Printing final matrix
        cout<<"Multiplied Matrices: "<<endl;
        for(int i=0; i<m; i++){
            for(int j=0; j<q; j++){
                cout<<ans[i][j]<<" ";
            }
            cout<<endl;
        }
    }else{
        cout<<"Matrices can't be multiplied!"<<endl;
    }

    return 0;
}

---------------------------------------------
Que 18: Check Password Strength:

#include<iostream>
using namespace std;

int main(){
    string s;
    cout<<"Enter your password: ";
    cin>>s;

    int strength = 0;
    
    if(s.length()>=8) strength++;  //length>8
    
    int up = 0, low = 0;
    // upper & lower case combination
    for(int i=0; i<s.length(); i++){
        if(s[i]>=65 && s[i]<=90) up++;
        else if(s[i]>=97 && s[i]<=122) low++;
        if(up>=1 && low>=1){
            strength++;
            break;
        }
    }

    int alpha = 0, dig = 0;
    // alphabets and digits combination
    for(int i=0; i<s.length(); i++){
        if((s[i]>=65 && s[i]<=90) || (s[i]>=97 && s[i]<=122)) alpha++;
        else if(s[i]>=48 && s[i]<=57) dig++;
        if(alpha>=1 && dig>=1){
            strength++;
            break;
        }
    }
    
    // special characters
    for(int i=0; i<s.length(); i++){
        if((s[i]>=48 && s[i]<=57) || (s[i]>=65 && s[i]<=90) || (s[i]>=97 && s[i]<=122)) continue;
        else{
            strength++;
            break;
        }
    }
    
    cout<<"Your Password's strength: "<<strength<<endl;

    return 0;
}

-------------------------------------------------
Que 19: Spiral type Pattern:

